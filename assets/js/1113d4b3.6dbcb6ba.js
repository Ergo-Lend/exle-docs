"use strict";(self.webpackChunkexle_docs=self.webpackChunkexle_docs||[]).push([[132],{3905:function(e,t,n){n.d(t,{Zo:function(){return h},kt:function(){return u}});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=o.createContext({}),c=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},h=function(e){var t=c(e.components);return o.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},p=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,h=i(e,["components","mdxType","originalType","parentName"]),p=c(n),u=a,f=p["".concat(l,".").concat(u)]||p[u]||d[u]||r;return n?o.createElement(f,s(s({ref:t},h),{},{components:n})):o.createElement(f,s({ref:t},h))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,s=new Array(r);s[0]=p;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var c=2;c<r;c++)s[c]=n[c];return o.createElement.apply(null,s)}return o.createElement.apply(null,n)}p.displayName="MDXCreateElement"},4760:function(e,t,n){n.r(t),n.d(t,{assets:function(){return h},contentTitle:function(){return l},default:function(){return u},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return d}});var o=n(7462),a=n(3366),r=(n(7294),n(3905)),s=["components"],i={id:"backend-system-components",title:"Backend Components of Exle",sidebar_position:2},l="Backend Components of Exle",c={unversionedId:"getting-started/backend-system-components",id:"getting-started/backend-system-components",title:"Backend Components of Exle",description:"The exle system is built on top of the Ergo Blockchain. The current system consists of these few parts:",source:"@site/docs/getting-started/backend-system-components.mdx",sourceDirName:"getting-started",slug:"/getting-started/backend-system-components",permalink:"/exle-docs/docs/getting-started/backend-system-components",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/getting-started/backend-system-components.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"backend-system-components",title:"Backend Components of Exle",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Exle in a Nutshell",permalink:"/exle-docs/docs/getting-started/exle-in-a-nutshell"},next:{title:"System Architecture",permalink:"/exle-docs/docs/category/system-architecture"}},h={},d=[{value:"On-Chain System",id:"onchain",level:2},{value:"Off-Chain Bot",id:"bot",level:2},{value:"Loan System",id:"loan",level:2}],p={toc:d};function u(e){var t=e.components,n=(0,a.Z)(e,s);return(0,r.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"backend-components-of-exle"},"Backend Components of Exle"),(0,r.kt)("p",null,"The exle system is built on top of the ",(0,r.kt)("a",{parentName:"p",href:"https://explorer.ergoplatform.com/"},"Ergo Blockchain"),". The current system consists of these few parts:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Components"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"On-Chain System"),(0,r.kt)("td",{parentName:"tr",align:null},"There are a few protocols that will exists on the on-chain system that will allow different kind of lending like, single-lender, or multi-lender loans. The development of this system involves writing ErgoScript contracts and testing it to ensure that the system is free of vulnerabilities.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Off-Chain Bot"),(0,r.kt)("td",{parentName:"tr",align:null},"The Ergo blockchain uses eUTxO system and transactions on the blockchain creates boxes that can either be spent or not based on its Guard Script (ErgoScript contract). The goal of the off-chain bots is to ",(0,r.kt)("strong",{parentName:"td"},"find boxes that are ready to be spent")," to move on to the next stage of the lending process.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Loan System"),(0,r.kt)("td",{parentName:"tr",align:null},"The backend loan system seeks to create systems that focuses on processing data and output it in formats that reduces the confusion and increase the confidence of users when utilizing the Exle system. The goal of this is to provide users (Lenders and Borrowers) efficient tooling to help lenders succeed in identifying credible loans and borrowers to repay their loans efficiently and successfully")))),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"onchain"},"On-Chain System"),(0,r.kt)("p",null,"The on-chain system focuses on the decentralized protocol of the system. The design follows a transaction pattern that allows financial procedure to carry out as it should. This includes"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Processes"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"1. Scenarios and Tx Flow"),(0,r.kt)("td",{parentName:"tr",align:null},"The transaction follows certain flows based on the scenario. Each scenarios are mapped out for each of contract engineering")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2. eUTxO Box Design"),(0,r.kt)("td",{parentName:"tr",align:null},"Designing the boxes to efficiently plan and provide a solid understanding and map to navigate the engineering of the contract and off-chain system")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"3. Contracts of each boxes"),(0,r.kt)("td",{parentName:"tr",align:null},"Guard Script of the boxes that determines whether a boxes can be spent or not. These scripts are normally engineered when the Scenarios and eUTxO boxes are designed")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"4. Security tests"),(0,r.kt)("td",{parentName:"tr",align:null},"Write tests to efficiently find bugs and vulnerabilities within the contract. Other than that, tests are used to ensure that scenarios are working as it should be")))),(0,r.kt)("h2",{id:"bot"},"Off-Chain Bot"),(0,r.kt)("p",null,"The bot processes boxes that are ready to move on to the subsequent stage of the transaction flow. It also aims to provide scalability in the processing of transaction by streamlining the process to avoid bottleneck conditions."),(0,r.kt)("p",null,"Development in this area involves:\n| Processes | Description |\n| --- | --- |\n| 1. Tx scenarios Modeling | Scenarios are fed into the bot to run transactions efficiently |\n| 2. Box retrieval | Retrieving the necessary boxes and information to process |\n| 3. Tx Handling | After retrieving the box, the bot have to know which transactions to be run on which boxes and what stages |\n| 4. Signing & Sending of Txs to the blockchain | As we aim to improve scalability of our system, we will move towards bulk chained txs. This may or may not involve signing at the end of the bulk processes. Therefore this step is included to ensure that the process is not forgotten |\n| 5. Scalability | As we move forward, we are constantly thinking of ways we can allow the system to scale efficiently. Though not a high priority right now, it will be a big part of our investment in the future as users of the protocol increases |\n| 6. Decentralization | Other than scalability, we aim to decentralized our system so that other parties can run the bot and facilitate the process of decentalization of the protocol. This is highly intertwined with the design of the On-Chain system. |"),(0,r.kt)("h2",{id:"loan"},"Loan System"),(0,r.kt)("p",null,"Lastly, the introduction of a loan system that provides the necessary information that facilitate successful loan journey is critical. Different processes have to be implemented to help improve this. Though this system can be built by other custodians in the future, we aim to provide a good enough system for our users to get the ball rolling."),(0,r.kt)("p",null,'Development in this area includes:\n| Processes | Description |\n| ---- | ---- |\n| 1. Loan Planner and Modeler | The success of a loan can be determined by the information and details that are put into a loan. It is easy to say, "I need 20k to run this business", but that does not give the ',(0,r.kt)("em",{parentName:"p"},"Lenders")," the confidence that the borrower will pay back, nor does it give the borrower a good idea on how he should pay it back. The Loan Planner gives Borrowers the tools to efficiently craft out a plan for the loan that they are going to take out, and a plan on how they will repay them. This gives the lenders a better understanding of the plan and the confidence that the borrowers will be able to repay the loan (based on the plan created), and also provide the Borrower with a solid plan to follow and repay. |\n| 2. My Loans | When the system goes live, and loans starts to be created. There needs a system for the Borrowers to keep track of their loans, and Lenders to keep track of loans that they have funded. A ",(0,r.kt)("inlineCode",{parentName:"p"},"My Loans")," system help users of the system to keep track of the different loans that they have funded with ease. This allows them to follow up if needed and provide them an ease of mind as their loans are not lost in the sea of other loans |\n| 3. Repayment Plan | When we don't need to think about other things, we can focus on the important things at hands. We envision that legit borrowers are people who are looking to start businesses and requires the capital. They were able to get funding for their capital and now they have to put in the work to reap the gains. Having a repayment plan built-in allows them to focus on what matters, and repay loans without needing to hold a calculator on their left hand while typing the amount to repay on their right. A solid repayment plan will reduce the amount of frustration and confusion may have during repayment, and ensure success in repaying their loans. |"),(0,r.kt)("p",null,"::: note\nThe repayment plan does not mean we create a repayment plan for the borrowers, but rather use the accounting information of the loans to model a repayment plan for the borrowers to give them a good visualization of their duties of repayment.\n:::"))}u.isMDXComponent=!0}}]);